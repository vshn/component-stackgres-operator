apiVersion: v1
data:
  nginx.conf: |
    pid        /tmp/nginx.pid;
    events{
    }
    error_log  /dev/stderr  warn;
    http {
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;

        client_max_body_size  20M;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /dev/stdout  main;

        sendfile        on;

        keepalive_timeout  65;

        include /etc/nginx/conf.d/*.conf;
    }
  stackgres-restapi.template: "map $http_host $my_forwarded_port {\n  default $server_port;\n\
    \  \"~^[^\\:]+:(?<p>\\d+)$\" $p;\n}\nserver {\n  set $grafana_embedded '${GRAFANA_EMBEDDED}';\n\
    \n  server_name  localhost;\n\n  listen       9080;\n  listen       9443 ssl;\n\
    \  ssl_certificate         /etc/operator/certs/server.crt;\n  ssl_certificate_key\
    \     /etc/operator/certs/root.key;\n  root   /opt/app-root/src;\n  index index.html;\n\
    \n  location /admin/ {\n    try_files $uri $uri/index.html /admin/index.html;\n\
    \  }\n\n  location ~ ^(/|/admin|/admin/)$ {\n    return 302 \"$scheme://$http_host/admin/index.html\"\
    ;\n  }\n\n  location /grafana {\n    if ($grafana_embedded != true) {\n      return\
    \ 404;\n    }\n    add_header Content-Type text/plain;\n    return 200 \"$scheme://$http_host${GRAFANA_URL_PATH}\"\
    ;\n  }\n\n  location ~ ^(/|/stackgres|/stackgres/)$ {\n    return 302 \"$scheme://$http_host/admin/index.html\"\
    ;\n  }\n\n  location ~ ^/stackgres {\n    proxy_redirect off;\n    proxy_set_header\
    \ Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header\
    \ X-Forwarded-Host $host;\n    proxy_set_header X-Forwarded-Port $my_forwarded_port;\n\
    \    proxy_set_header X-Forwarded-Server $host;\n    proxy_set_header X-Forwarded-For\
    \ $proxy_add_x_forwarded_for;\n    \n    proxy_pass http://localhost:8080;\n \
    \ }\n\n  location / {\n    if ($grafana_embedded != true) {\n      return 404;\n\
    \    }\n    proxy_set_header Host $host;\n    proxy_set_header X-Real-IP $remote_addr;\n\
    \    proxy_set_header X-Forwarded-Host $host;\n    proxy_set_header X-Forwarded-Server\
    \ $host;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n \
    \   index index.html index.htm;\n    proxy_set_header Authorization \"Bearer ${GRAFANA_TOKEN}\"\
    ;\n    proxy_hide_header X-Frame-Options;\n    proxy_pass \"${GRAFANA_SCHEMA}://${GRAFANA_WEB_HOST}\"\
    ;\n  }\n}\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: syn-stackgres-operator
  labels:
    app.kubernetes.io/managed-by: Helm
  name: stackgres-restapi-nginx
  namespace: syn-stackgres-operator
