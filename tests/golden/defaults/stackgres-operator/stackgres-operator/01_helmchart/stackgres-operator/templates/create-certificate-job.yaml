apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: '10'
  labels:
    app: stackgres-operator-create-certificate
    job: create-certificate
    scope: init
  name: stackgres-operator-create-certificate
  namespace: syn-stackgres-operator
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator-create-certificate
        job: create-certificate
        scope: init
    spec:
      containers:
        - command:
            - /bin/bash
            - -ecx
            - "echo -n \"Waiting for secret stackgres-operator-certs to be available...\"\
              \nuntil kubectl get secret -n 'syn-stackgres-operator' 'stackgres-operator-certs'\
              \ \\\n  --template '{{ if .data }}{{ if and (index .data \"tls.key\"\
              ) (index .data \"tls.crt\") }}true{{ end }}{{ end }}' \\\n  | grep -q\
              \ '^true$'\ndo\n  echo -n .\n  sleep 2\ndone\necho \"secret available\"\
              \nKEY=\"$(kubectl get secret -n 'syn-stackgres-operator' 'stackgres-operator-certs'\
              \ --template '{{ (index .data \"tls.key\") }}' | tr -d '\\n')\"\nCRT=\"\
              $(kubectl get secret -n 'syn-stackgres-operator' 'stackgres-operator-certs'\
              \ --template '{{ (index .data \"tls.crt\") }}' | tr -d '\\n')\"\ncat\
              \ << EOF > /tmp/validating-webhook-configuration.yaml            \n\
              apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\n\
              metadata:\n  name: stackgres-operator\n  namespace: syn-stackgres-operator\n\
              \  annotations:\n    meta.helm.sh/release-name: stackgres-operator\n\
              \    meta.helm.sh/release-namespace: syn-stackgres-operator\n  labels:\n\
              \    app.kubernetes.io/managed-by: Helm\nwebhooks:\n  - name: sgcluster.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sgclusters\"]\n    failurePolicy: Fail\n\
              \    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/validation/sgcluster'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgpgconfig.stackgres-operator.syn-stackgres-operator\n   \
              \ sideEffects: None\n    rules:\n      - operations: [\"CREATE\", \"\
              UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n     \
              \   apiVersions: [\"*\"]\n        resources: [\"sgpgconfigs\"]\n   \
              \ failurePolicy: Fail\n    clientConfig:\n      service:\n        namespace:\
              \ syn-stackgres-operator\n        name: stackgres-operator\n       \
              \ path: '/stackgres/validation/sgpgconfig'\n      caBundle: '${CRT}'\n\
              \    admissionReviewVersions: [\"v1\"]\n  - name: sgpoolconfig.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sgpoolconfigs\"\
              ]\n    failurePolicy: Fail\n    clientConfig:\n      service:\n    \
              \    namespace: syn-stackgres-operator\n        name: stackgres-operator\n\
              \        path: '/stackgres/validation/sgpoolconfig'\n      caBundle:\
              \ '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n  - name: sginstanceprofile.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sginstanceprofiles\"\
              ]\n    failurePolicy: Fail\n    clientConfig:\n      service:\n    \
              \    namespace: syn-stackgres-operator\n        name: stackgres-operator\n\
              \        path: '/stackgres/validation/sginstanceprofile'\n      caBundle:\
              \ '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n  - name: sgbackupconfig.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sgbackupconfigs\"\
              ]\n    failurePolicy: Fail\n    clientConfig:\n      service:\n    \
              \    namespace: syn-stackgres-operator\n        name: stackgres-operator\n\
              \        path: '/stackgres/validation/sgbackupconfig'\n      caBundle:\
              \ '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n  - name: sgbackup.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sgbackups\"]\n \
              \   failurePolicy: Fail\n    clientConfig:\n      service:\n       \
              \ namespace: syn-stackgres-operator\n        name: stackgres-operator\n\
              \        path: '/stackgres/validation/sgbackup'\n      caBundle: '${CRT}'\n\
              \    admissionReviewVersions: [\"v1\"]\n  - name: sgdistributedlogs.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sgdistributedlogs\"\
              ]\n    failurePolicy: Fail\n    clientConfig:\n      service:\n    \
              \    namespace: syn-stackgres-operator\n        name: stackgres-operator\n\
              \        path: '/stackgres/validation/sgdistributedlogs'\n      caBundle:\
              \ '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n  - name: sgdbops.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sgdbops\"]\n   \
              \ failurePolicy: Fail\n    clientConfig:\n      service:\n        namespace:\
              \ syn-stackgres-operator\n        name: stackgres-operator\n       \
              \ path: '/stackgres/validation/sgdbops'\n      caBundle: '${CRT}'\n\
              \    admissionReviewVersions: [\"v1\"]\n  - name: sgobjectstorage.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sgobjectstorages\"\
              ]\n    failurePolicy: Fail\n    clientConfig:\n      service:\n    \
              \    namespace: syn-stackgres-operator\n        name: stackgres-operator\n\
              \        path: '/stackgres/validation/sgobjectstorage'\n      caBundle:\
              \ '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n  - name: sgscripts.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\", \"DELETE\"]\n        apiGroups: [\"stackgres.io\"]\n \
              \       apiVersions: [\"*\"]\n        resources: [\"sgscripts\"]\n \
              \   failurePolicy: Fail\n    clientConfig:\n      service:\n       \
              \ namespace: syn-stackgres-operator\n        name: stackgres-operator\n\
              \        path: '/stackgres/validation/sgscript'\n      caBundle: ${CRT}\n\
              \    admissionReviewVersions: [\"v1\"]\nEOF\ncat << EOF > /tmp/mutating-webhook-configuration.yaml\
              \            \napiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\n\
              metadata:\n  name: stackgres-operator\n  namespace: syn-stackgres-operator\n\
              \  annotations:\n    meta.helm.sh/release-name: stackgres-operator\n\
              \    meta.helm.sh/release-namespace: syn-stackgres-operator\n  labels:\n\
              \    app.kubernetes.io/managed-by: Helm\nwebhooks:\n  - name: sgcluster.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sgclusters\"]\n    failurePolicy: Fail\n\
              \    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/mutation/sgcluster'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgpgconfig.stackgres-operator.syn-stackgres-operator\n   \
              \ sideEffects: None\n    rules:\n      - operations: [\"CREATE\", \"\
              UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sgpgconfigs\"]\n    failurePolicy:\
              \ Fail\n    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/mutation/sgpgconfig'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgpoolconfig.stackgres-operator.syn-stackgres-operator\n \
              \   sideEffects: None\n    rules:\n      - operations: [\"CREATE\",\
              \ \"UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sgpoolconfigs\"]\n    failurePolicy:\
              \ Fail\n    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/mutation/sgpoolconfig'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sginstanceprofile.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sginstanceprofiles\"]\n    failurePolicy:\
              \ Fail\n    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/mutation/sginstanceprofile'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgbackupconfig.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sgbackupconfigs\"]\n    failurePolicy:\
              \ Fail\n    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/mutation/sgbackupconfig'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgbackup.stackgres-operator.syn-stackgres-operator\n    sideEffects:\
              \ None\n    rules:\n      - operations: [\"CREATE\", \"UPDATE\"]\n \
              \       apiGroups: [\"stackgres.io\"]\n        apiVersions: [\"*\"]\n\
              \        resources: [\"sgbackups\"]\n    failurePolicy: Fail\n    clientConfig:\n\
              \      service:\n        namespace: syn-stackgres-operator\n       \
              \ name: stackgres-operator\n        path: '/stackgres/mutation/sgbackup'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgdistributedlogs.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sgdistributedlogs\"]\n    failurePolicy:\
              \ Fail\n    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/mutation/sgdistributedlogs'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgdbops.stackgres-operator.syn-stackgres-operator\n    sideEffects:\
              \ None\n    rules:\n      - operations: [\"CREATE\", \"UPDATE\"]\n \
              \       apiGroups: [\"stackgres.io\"]\n        apiVersions: [\"*\"]\n\
              \        resources: [\"sgdbops\"]\n    failurePolicy: Fail\n    clientConfig:\n\
              \      service:\n        namespace: syn-stackgres-operator\n       \
              \ name: stackgres-operator\n        path: '/stackgres/mutation/sgdbops'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgobjectstorage.stackgres-operator.syn-stackgres-operator\n\
              \    sideEffects: None\n    rules:\n      - operations: [\"CREATE\"\
              , \"UPDATE\"]\n        apiGroups: [\"stackgres.io\"]\n        apiVersions:\
              \ [\"*\"]\n        resources: [\"sgobjectstorages\"]\n    failurePolicy:\
              \ Fail\n    clientConfig:\n      service:\n        namespace: syn-stackgres-operator\n\
              \        name: stackgres-operator\n        path: '/stackgres/mutation/sgobjectstorage'\n\
              \      caBundle: '${CRT}'\n    admissionReviewVersions: [\"v1\"]\n \
              \ - name: sgscripts.stackgres-operator.syn-stackgres-operator\n    sideEffects:\
              \ None\n    rules:\n      - operations: [\"CREATE\", \"UPDATE\"]\n \
              \       apiGroups: [\"stackgres.io\"]\n        apiVersions: [\"*\"]\n\
              \        resources: [\"sgscripts\"]\n    failurePolicy: Fail\n    clientConfig:\n\
              \      service:\n        namespace: syn-stackgres-operator\n       \
              \ name: stackgres-operator\n        path: '/stackgres/mutation/sgscript'\n\
              \      caBundle: ${CRT}\n    admissionReviewVersions: [\"v1\"]\n\nEOF\n\
              \nkubectl apply -f /tmp/validating-webhook-configuration.yaml\nkubectl\
              \ apply -f /tmp/mutating-webhook-configuration.yaml\ncat << EOF > /tmp/csr-web.conf\n\
              [req]\nreq_extensions = v3_req\ndistinguished_name = req_distinguished_name\n\
              [req_distinguished_name]\n[ v3_req ]\nbasicConstraints = CA:FALSE\n\
              keyUsage = nonRepudiation, digitalSignature, keyEncipherment\nextendedKeyUsage\
              \ = serverAuth\nsubjectAltName = @alt_names\n[alt_names]\nDNS.1 = stackgres-restapi\n\
              DNS.2 = stackgres-restapi.syn-stackgres-operator\nDNS.3 = stackgres-restapi.syn-stackgres-operator.svc\n\
              DNS.4 = stackgres-restapi.syn-stackgres-operator.svc.cluster.local\n\
              EOF\n\nopenssl req -new -nodes -text -keyout /tmp/web.key \\\n    -subj\
              \ \"/CN=stackgres-restapi.syn-stackgres-operator\" \\\n    -out /tmp/server-web.csr\
              \ \\\n    -config /tmp/csr-web.conf\nopenssl rsa -in /tmp/web.key -pubout\
              \ -out /tmp/web.pem\nopenssl x509 -signkey /tmp/web.key -in /tmp/server-web.csr\
              \ \\\n  -req -days 365 -out /tmp/server-web.crt\nWEB_KEY=\"$(cat /tmp/web.key\
              \ | base64 | tr -d '\\n')\"\nWEB_PUB=\"$(cat /tmp/web.pem | base64 |\
              \ tr -d '\\n')\"\nWEB_CRT=\"$(cat /tmp/server-web.crt | base64 | tr\
              \ -d '\\n')\"\ncat << EOF > /tmp/web-certificate-secret.yaml       \
              \     \napiVersion: v1\nkind: Secret\nmetadata:\n  name: stackgres-operator-web-certs\n\
              \  namespace: syn-stackgres-operator\n  annotations:\n    meta.helm.sh/release-name:\
              \ stackgres-operator\n    meta.helm.sh/release-namespace: syn-stackgres-operator\n\
              \  labels:\n    app.kubernetes.io/managed-by: Helm\ntype: kubernetes.io/tls\n\
              data:\n  tls.key: ${WEB_KEY}\n  tls.crt: ${WEB_CRT}\n  jwt-rsa.key:\
              \ ${WEB_KEY}\n  jwt-rsa.pub: ${WEB_PUB}\nEOF\n\nkubectl delete -f /tmp/web-certificate-secret.yaml\
              \ --ignore-not-found\nkubectl apply -f /tmp/web-certificate-secret.yaml\n\
              kubectl annotate --overwrite validatingwebhookconfigurations stackgres-operator\
              \ cert-manager.io/inject-ca-from=syn-stackgres-operator/stackgres-operator-cert\n\
              kubectl annotate --overwrite mutatingwebhookconfigurations stackgres-operator\
              \ cert-manager.io/inject-ca-from=syn-stackgres-operator/stackgres-operator-cert\n"
          image: docker.io/ongres/kubectl:v1.24.3-build-6.16
          imagePullPolicy: IfNotPresent
          name: create-certificate
      restartPolicy: OnFailure
      securityContext: null
      serviceAccountName: stackgres-operator-init
      terminationGracePeriodSeconds: 0
