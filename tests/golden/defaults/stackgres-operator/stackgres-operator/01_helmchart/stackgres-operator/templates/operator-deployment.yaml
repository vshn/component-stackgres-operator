apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cert-config: |
      {"certManager":{"autoConfigure":true}}
    version: 1.7.0
  labels:
    app: stackgres-operator
    group: stackgres.io
    version: 1.7.0
  name: stackgres-operator
  namespace: syn-stackgres-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stackgres-operator
      group: stackgres.io
  template:
    metadata:
      labels:
        app: stackgres-operator
        group: stackgres.io
    spec:
      containers:
        - env:
            - name: OPERATOR_NAME
              value: stackgres-operator
            - name: OPERATOR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: OPERATOR_IMAGE_VERSION
              value: 1.7.0
            - name: DISABLE_RECONCILIATION
              value: 'false'
            - name: INSTALL_CRDS
              value: 'true'
            - name: INSTALL_WEBHOOKS
              value: 'true'
            - name: PROMETHEUS_AUTOBIND
              value: 'true'
            - name: USE_ARBITRARY_USER
              value: 'true'
            - name: OPERATOR_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.serviceAccountName
            - name: OPERATOR_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: OPERATOR_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SG_CONTAINER_REGISTRY
              value: quay.io
            - name: SG_IMAGE_PULL_POLICY
              value: IfNotPresent
            - name: EXTENSIONS_REPOSITORY_URLS
              value: https://extensions.stackgres.io/postgres/repository
          image: quay.io/stackgres/operator:1.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 60
            timeoutSeconds: 10
          name: stackgres-operator
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: https
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 2
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /etc/operator/certs
              name: operator-certs
              readOnly: true
      securityContext: null
      serviceAccountName: stackgres-operator
      volumes:
        - name: operator-certs
          secret:
            optional: true
            secretName: stackgres-operator-certs
